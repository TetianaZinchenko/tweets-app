{"version":3,"file":"static/js/23.e1843bc1.chunk.js","mappings":"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","sources":["components/App/App.styled.js","services/API.js","components/TweetsListItem/TweetsListItem.styled.js","components/TweetsListItem/TweetsListItem.jsx","components/Loader/Loader.styled.js","components/Loader/Loader.js","components/TweetsList/TweetsList.styled.js","components/TweetsList/TweetsList.jsx","pages/Tweets.js"],"sourcesContent":["import styled from '@emotion/styled';\r\n\r\nimport { theme } from 'theme/theme';\r\nconst { fontSizes, fontWeights, colors } = theme;\r\n\r\nexport const Container = styled.div`\r\n  margin: 0 auto;\r\n  margin-top: 10px;\r\n  margin-bottom: 10px;\r\n  padding: 10px;\r\n\r\n  text-align: center;\r\n  justify-content: center;\r\n\r\n  border-radius: 20px;\r\n  border: 3px solid ${colors.purpleDark};\r\n\r\n  background: ${colors.blueGradient};\r\n`;\r\n\r\nexport const Title = styled.h1`\r\n  display: block;\r\n\r\n  font-weight: ${fontWeights.semibold};\r\n  font-size: ${fontSizes[9]}px;\r\n  text-align: center;\r\n  color: ${colors.accent};\r\n\r\n  animation: title 3000ms infinite;\r\n\r\n  @keyframes title {\r\n    0% {\r\n      transform: scale(1.5);\r\n    }\r\n    50% {\r\n      transform: scale(1);\r\n    }\r\n    100% {\r\n      transform: scale(1.5);\r\n    }\r\n  }\r\n`;\r\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://6489d0b65fa58521cab04db0.mockapi.io';\n\nexport async function fetchTweets(params) {\n  return await axios.get(`/users`, { params });\n}\n","import styled from '@emotion/styled';\r\n\r\nimport bg from 'images/bg.png';\r\n\r\nimport { theme } from 'theme/theme';\r\nconst { fontSizes, fontWeights, colors, shadows } = theme;\r\n\r\nexport const TweetContainer = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n\r\n  width: 380px;\r\n\r\n  box-shadow: ${shadows.containerShadow};\r\n  border-radius: 20px;\r\n\r\n  background: linear-gradient(\r\n    114.99deg,\r\n    #471ca9 -0.99%,\r\n    #5736a3 54.28%,\r\n    #4b2a99 78.99%\r\n  );\r\n`;\r\n\r\nexport const TweetRectangle = styled.div`\r\n  position: absolute;\r\n  top: 214px;\r\n  left: 0;\r\n\r\n  width: 100%;\r\n  height: 8px;\r\n\r\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.06),\r\n    inset 0px -1.71846px 3.43693px ${colors.purpleLight},\r\n    inset 0px 3.43693px 2.5777px ${colors.accent};\r\n\r\n  background: ${colors.accent};\r\n`;\r\n\r\nexport const TweetLogo = styled.div`\r\n  position: absolute;\r\n  top: 20px;\r\n  left: 20px;\r\n\r\n  width: 76px;\r\n  height: 22px;\r\n`;\r\n\r\nexport const TweetBg = styled.div`\r\n  width: 308px;\r\n  height: 168px;\r\n\r\n  margin-top: 28px;\r\n\r\n  background-image: url(${bg});\r\n`;\r\n\r\nexport const BorderTweetAvatar = styled.div`\r\n  position: absolute;\r\n  top: 178px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  width: 80px;\r\n  height: 80px;\r\n\r\n  box-shadow: 0px 4.39163px 4.39163px rgba(0, 0, 0, 0.06),\r\n    inset 0px -2.19582px 4.39163px ${colors.purpleLight},\r\n    inset 0px 4.39163px 3.29372px ${colors.accent};\r\n  border-radius: 50%;\r\n\r\n  background: ${colors.accent};\r\n`;\r\n\r\nexport const BorderAvatar = styled.div`\r\n  width: 62px;\r\n  height: 62px;\r\n\r\n  border-radius: 50%;\r\n  background: ${colors.purple};\r\n`;\r\n\r\nexport const TweetUserPhoto = styled.img`\r\n  border-radius: 50%;\r\n`;\r\n\r\nexport const TweetInfo = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n\r\n  margin-top: 88px;\r\n\r\n  font-style: normal;\r\n  font-size: ${fontSizes[4]}px;\r\n  line-height: calc(24 / 20);\r\n  text-transform: uppercase;\r\n  color: ${colors.accent};\r\n`;\r\n\r\nexport const TextUser = styled.span`\r\n  font-weight: ${fontWeights.semibold};\r\n  font-size: ${fontSizes[5]}px;\r\n  color: ${colors.blueLight};\r\n`;\r\n\r\nexport const TextTweets = styled.span`\r\n  margin-top: 16px;\r\n`;\r\n\r\nexport const TextFollowers = styled.span`\r\n  margin-top: 16px;\r\n`;\r\n\r\nexport const TweetButton = styled.button`\r\n  width: 196px;\r\n  height: 50px;\r\n\r\n  padding: 14px 28px;\r\n  margin-top: 26px;\r\n  margin-bottom: 36px;\r\n\r\n  font-style: normal;\r\n  font-weight: ${fontWeights.semibold};\r\n  font-size: ${fontSizes[3]}px;\r\n  line-height: calc(22 / 18);\r\n  text-transform: uppercase;\r\n  color: ${colors.black};\r\n\r\n  box-shadow: ${shadows.defaultShadow};\r\n  border-radius: 10.3108px;\r\n  border: none;\r\n  outline: none;\r\n\r\n  background-color: ${props =>\r\n    props[`data-following`] ? '#5cd3a8' : '#ebd8ff'};\r\n\r\n  cursor: pointer;\r\n`;\r\n","import logo from '../../images/logo.png';\r\n\r\nimport {\r\n  TweetLogo,\r\n  TweetBg,\r\n  TweetRectangle,\r\n  BorderTweetAvatar,\r\n  BorderAvatar,\r\n  TweetUserPhoto,\r\n  TweetButton,\r\n  TweetInfo,\r\n  TextUser,\r\n  TextTweets,\r\n  TextFollowers,\r\n  TweetContainer,\r\n} from './TweetsListItem.styled';\r\n\r\nexport default function TweetsListItem({\r\n  id,\r\n  user,\r\n  avatar,\r\n  tweets,\r\n  followers,\r\n  setFollowing,\r\n  isFollowing,\r\n}) {\r\n  const nextFollowingCount = (isFollowing ? 1 : 0) + followers;\r\n  const tweetsCount = tweets.toLocaleString('en-EN');\r\n  const followingCount = nextFollowingCount.toLocaleString('en-EN');\r\n\r\n  return (\r\n    <TweetContainer>\r\n      <TweetRectangle />\r\n\r\n      <TweetLogo>\r\n        <img src={logo} alt=\"logo\" width=\"76\" height=\"22\" />\r\n      </TweetLogo>\r\n      <TweetBg />\r\n\r\n      <BorderTweetAvatar>\r\n        <BorderAvatar>\r\n          <TweetUserPhoto\r\n            src={avatar}\r\n            alt=\"User avatar\"\r\n            width=\"62\"\r\n            height=\"62\"\r\n          />\r\n        </BorderAvatar>\r\n      </BorderTweetAvatar>\r\n\r\n      <TweetInfo>\r\n        <TextUser>{user}</TextUser>\r\n        <TextTweets>{tweetsCount} tweets</TextTweets>\r\n        <TextFollowers>{followingCount} followers</TextFollowers>\r\n      </TweetInfo>\r\n      <TweetButton\r\n        type=\"button\"\r\n        onClick={() => setFollowing(id)}\r\n        data-following={isFollowing}\r\n      >\r\n        {isFollowing ? 'Following' : 'Follow'}\r\n      </TweetButton>\r\n    </TweetContainer>\r\n  );\r\n}\r\n","const { default: styled } = require('@emotion/styled');\n\nexport const Spinner = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n","import React from 'react';\n\nimport GridLoader from 'react-spinners/GridLoader';\n\nimport { Spinner } from './Loader.styled';\n\nconst Loader = () => {\n  return (\n    <Spinner>\n      <GridLoader color=\"#0000a0\" aria-label=\"Loading Spinner\" size={40} />\n    </Spinner>\n  );\n};\n\nexport { Loader };\n","import styled from '@emotion/styled';\r\n\r\nimport { theme } from 'theme/theme';\r\nconst { fontSizes, fontWeights, colors, shadows } = theme;\r\n\r\nexport const TweetsContainer = styled.ul`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 30px;\r\n`;\r\n\r\nexport const ButtonLoadMore = styled.button`\r\n  font-style: normal;\r\n  font-weight: ${fontWeights.semibold};\r\n  font-size: ${fontSizes[3]}px;\r\n  line-height: calc(22 / 18);\r\n  text-transform: uppercase;\r\n  color: ${colors.black};\r\n\r\n  width: 196px;\r\n  height: 50px;\r\n\r\n  padding: 14px 28px;\r\n  margin-top: 30px;\r\n  margin-bottom: 30px;\r\n\r\n  box-shadow: ${shadows.defaultShadow};\r\n  border-radius: 10.3108px;\r\n  border: none;\r\n  outline: none;\r\n\r\n  background: ${colors.accent};\r\n\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background: ${colors.blueLight};\r\n  }\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 5px;\r\n\r\n  width: 200px;\r\n  height: 80px;\r\n  margin-top: -40px;\r\n  margin-bottom: 20px;\r\n  margin-left: auto;\r\n  margin-right: 30px;\r\n\r\n  text-align: center;\r\n  font-size: ${fontSizes[3]}px;\r\n  font-weight: ${fontWeights.semibold};\r\n  line-height: calc(22 / 18);\r\n  color: ${colors.accent};\r\n\r\n  box-shadow: ${shadows.defaultShadow};\r\n  border-radius: 10.3108px;\r\n\r\n  background-color: ${colors.purple};\r\n\r\n  outline: none;\r\n`;\r\n\r\nexport const Filter = styled.select`\r\n  padding-left: 5px;\r\n\r\n  font-size: ${fontSizes[3]}px;\r\n  font-weight: ${fontWeights.semibold};\r\n  line-height: calc(22 / 18);\r\n  color: ${colors.black};\r\n\r\n  border-radius: 10.3108px;\r\n\r\n  background-color: ${colors.accent};\r\n\r\n  outline: none;\r\n\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const NoTweets = styled.h3`\r\n  text-align: center;\r\n\r\n  font-size: ${fontSizes[7]}px;\r\n  color: ${colors.red};\r\n`;\r\n","import { useState, useEffect, useRef } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport BackToTop from 'react-back-to-top';\r\n\r\nimport { fetchTweets } from 'services/API';\r\nimport TweetsListItem from '../TweetsListItem/TweetsListItem';\r\nimport { Loader } from 'components/Loader';\r\nimport {\r\n  ButtonLoadMore,\r\n  TweetsContainer,\r\n  Filter,\r\n  Label,\r\n  NoTweets,\r\n} from './TweetsList.styled';\r\n\r\nconst Status = {\r\n  IDLE: 'idle',\r\n  PENDING: 'pending',\r\n  RESOLVED: 'resolved',\r\n  REJECTED: 'rejected',\r\n};\r\n\r\nexport default function TweetsList() {\r\n  const [noResult, setNoResult] = useState(false);\r\n  const [tweets, setTweets] = useState([]);\r\n  const [filter, setFilter] = useState('show all');\r\n  const [status, setStatus] = useState(Status.IDLE);\r\n  const [page, setPage] = useState(1);\r\n  const [totalPages, setTotalPages] = useState(null);\r\n  const [following, setFollowing] = useState(() => {\r\n    const localStorFollowing = JSON.parse(localStorage.getItem('following'));\r\n    return localStorFollowing ? localStorFollowing : {};\r\n  });\r\n  const ButtonloadMoreRef = useRef(null);\r\n  const PER_PAGE = 3;\r\n\r\n  useEffect(() => {\r\n    setPage(1);\r\n    setTweets([]);\r\n\r\n    setStatus(Status.PENDING);\r\n\r\n    (async () => {\r\n      try {\r\n        const response = await fetchTweets();\r\n        setTweets([...response.data]);\r\n        setTotalPages(Math.ceil(response.data.length / PER_PAGE));\r\n        setStatus(Status.RESOLVED);\r\n      } catch (error) {\r\n        toast.error('Sorry, something went wrong...');\r\n        setStatus(Status.REJECTED);\r\n      }\r\n    })();\r\n  }, [totalPages]);\r\n\r\n  const incrementPage = () => {\r\n    setPage(prevPage => prevPage + 1);\r\n  };\r\n\r\n  const onLoadMore = () => {\r\n    incrementPage();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (page === totalPages) {\r\n      toast.success('There are all tweets!');\r\n    }\r\n  }, [page, totalPages]);\r\n\r\n  useEffect(() => {\r\n    if (!noResult) {\r\n      setTimeout(() => setNoResult(true), 3000);\r\n    }\r\n  }, [noResult]);\r\n\r\n  const onFilterChange = event => {\r\n    setFilter(event.target.value);\r\n  };\r\n\r\n  const onFollowing = id => {\r\n    setFollowing(prevState => ({\r\n      ...prevState,\r\n      [id]: prevState[id] ? !prevState[id] : true,\r\n    }));\r\n  };\r\n\r\n  const showFilteredTweets = () => {\r\n    if (filter === 'follow') {\r\n      return tweets.filter(tweet => following[tweet.id] !== true);\r\n    } else if (filter === 'followings') {\r\n      return tweets.filter(tweet => following[tweet.id] === true);\r\n    } else {\r\n      return tweets;\r\n    }\r\n  };\r\n\r\n  const filteredTweets = showFilteredTweets().slice(0, page * PER_PAGE);\r\n\r\n  localStorage.setItem('following', JSON.stringify(following));\r\n\r\n  return (\r\n    <>\r\n      {status === Status.PENDING && page === 1 && <Loader />}\r\n\r\n      <Label>\r\n        Filter tweets:\r\n        <Filter value={filter} onChange={onFilterChange}>\r\n          <option value=\"show all\">show all</option>\r\n          <option value=\"follow\">follow</option>\r\n          <option value=\"followings\">followings</option>\r\n        </Filter>\r\n      </Label>\r\n\r\n      {filteredTweets.length === 0 && noResult ? (\r\n        <NoTweets>There are no tweets with such filter settings!</NoTweets>\r\n      ) : (\r\n        <>\r\n          <TweetsContainer>\r\n            {filteredTweets.map(tweet => {\r\n              const { id, user, tweets, followers, avatar } = tweet;\r\n              const isFollowing = following[id] ? following[id] : false;\r\n\r\n              return (\r\n                <TweetsListItem\r\n                  key={id}\r\n                  id={id}\r\n                  user={user}\r\n                  avatar={avatar}\r\n                  tweets={tweets}\r\n                  followers={followers}\r\n                  setFollowing={onFollowing}\r\n                  isFollowing={isFollowing}\r\n                />\r\n              );\r\n            })}\r\n              \r\n            </TweetsContainer>\r\n            \r\n          {status === Status.RESOLVED && page < totalPages && (\r\n            <ButtonLoadMore\r\n              ref={ButtonloadMoreRef}\r\n              onClick={onLoadMore}\r\n              status={status}\r\n            >\r\n              Load More\r\n            </ButtonLoadMore>\r\n          )}\r\n        </>\r\n      )}\r\n\r\n      <BackToTop\r\n        percentStyle={{\r\n          width: '100%',\r\n          height: '100%',\r\n          color: '#0000A0',\r\n        }}\r\n        animate=\"rotate\"\r\n        offsetTop={20}\r\n        step={50}\r\n        percent={true}\r\n        visiblePercent={50}\r\n      />\r\n\r\n      {status === Status.PENDING && page > 1 && <Loader />}\r\n    </>\r\n  );\r\n}\r\n","import { useLocation, NavLink } from 'react-router-dom';\r\n\r\nimport { BsArrowLeftCircle } from 'react-icons/bs';\r\n\r\nimport TweetsList from '../components/TweetsList';\r\n\r\nimport { Container } from '../components/App/App.styled';\r\n\r\nconst styles = {\r\n  link: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n\r\n    marginLeft: '20px',\r\n    marginTop: '20px',\r\n\r\n    color: '#ebd8ff',\r\n    textDecoration: 'none',\r\n  },\r\n\r\n  span: {\r\n    marginLeft: '10px',\r\n\r\n    fontSize: '18px',\r\n    fontWeight: 600,\r\n    lineHeight: 1.22,\r\n  },\r\n};\r\n\r\nexport default function Tweets() {\r\n  const location = useLocation();\r\n\r\n  const goHome = location.state?.from ?? '/';\r\n\r\n  return (\r\n    <Container>\r\n      <NavLink style={styles.link} to={goHome}>\r\n        <BsArrowLeftCircle size={24} outline=\"#0000a0\" />\r\n        <span style={styles.span}>Go Home</span>\r\n      </NavLink>\r\n\r\n      <TweetsList />\r\n    </Container>\r\n  );\r\n}\r\n"],"names":["fontSizes","theme","fontWeights","colors","Container","styled","div","_templateObject","_taggedTemplateLiteral","purpleDark","blueGradient","Title","h1","_templateObject2","semibold","accent","fetchTweets","_x","_fetchTweets","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","params","wrap","_context","prev","next","axios","get","abrupt","sent","stop","defaults","baseURL","shadows","TweetContainer","containerShadow","TweetRectangle","purpleLight","TweetLogo","_templateObject3","TweetBg","_templateObject4","bg","BorderTweetAvatar","_templateObject5","BorderAvatar","_templateObject6","purple","TweetUserPhoto","img","_templateObject7","TweetInfo","_templateObject8","TextUser","span","_templateObject9","blueLight","TextTweets","_templateObject10","TextFollowers","_templateObject11","TweetButton","button","_templateObject12","black","defaultShadow","props","TweetsListItem","_ref","id","user","avatar","tweets","followers","setFollowing","isFollowing","nextFollowingCount","tweetsCount","toLocaleString","followingCount","_jsxs","children","_jsx","src","logo","alt","width","height","type","onClick","Spinner","require","default","Loader","GridLoader","color","size","TweetsContainer","ul","ButtonLoadMore","Label","label","Filter","select","NoTweets","h3","red","Status","IDLE","PENDING","RESOLVED","REJECTED","TweetsList","_useState","useState","_useState2","_slicedToArray","noResult","setNoResult","_useState3","_useState4","setTweets","_useState5","_useState6","filter","setFilter","_useState7","_useState8","status","setStatus","_useState9","_useState10","page","setPage","_useState11","_useState12","totalPages","setTotalPages","_useState13","localStorFollowing","JSON","parse","localStorage","getItem","_useState14","following","ButtonloadMoreRef","useRef","useEffect","response","_toConsumableArray","data","Math","ceil","length","t0","toast","error","success","setTimeout","onFollowing","prevState","_objectSpread","_defineProperty","filteredTweets","tweet","slice","setItem","stringify","_Fragment","value","onChange","event","target","map","ref","prevPage","BackToTop","percentStyle","animate","offsetTop","step","percent","visiblePercent","styles","link","display","alignItems","marginLeft","marginTop","textDecoration","fontSize","fontWeight","lineHeight","Tweets","_location$state$from","_location$state","goHome","useLocation","state","from","NavLink","style","to","BsArrowLeftCircle","outline"],"sourceRoot":""}